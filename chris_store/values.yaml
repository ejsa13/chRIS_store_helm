# Default values for chris_store.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/chrisproject/chris_store
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: "chris-store"
fullnameOverride: "chris-store"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8010

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# SHOULD BE USE ONLY FOR DEV SINCE THIS IS NOT HA
postgres:
  enabled: true
  db: chris_store_db
  user: chris
  secretname: postgres
  storageClassName: gp2

# SHOULD BE USE ONLY FOR DEV SINCE THIS IS NOT HA
swift:
  enabled: true
  key: testing
  secretname: swift
  storageClassName: gp2
  authUrl: http://swift.chris.svc:8080/auth/v1.0
  containername: store_users

django:
  settingsModule: config.settings.production
  dbMigrate: 'on' 
  allowedHosts: '*'
  secretKey: "w1kxu^l=@pnsf!5piqz6!!5kdcdpo79y6jebbp+2244yjm*#+k"
  corsOriginAllowAll: 'true'
  corsOriginsWhitelist: babymri.org
  secureProxySslHeader: ""
  useXForwardedHost: 'false'
  dbHost: postgres
  dbPort: '5432'